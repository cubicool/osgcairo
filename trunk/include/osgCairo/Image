// -*-c++-*- osgCairo - Copyright (C) 2006 Jeremy Moles

#ifndef OSGCAIRO_IMAGE
#define OSGCAIRO_IMAGE

#include <osg/Image>
#include <osgCairo/Surface>

namespace osgCairo {

class OSGCAIRO_EXPORT Image: public Surface, public osg::Image {
protected:
	bool        _allocated;
	CairoFormat _format;

	virtual CairoSurface* _createSurfaceImplementation();

public:
	META_Object(osgCairo, Image);

	Image(CairoFormat = CAIRO_FORMAT_ARGB32);

	Image(
		unsigned int,
		unsigned int,
		CairoFormat          = CAIRO_FORMAT_ARGB32,
		const unsigned char* = 0
	);
	
	Image(const Image&, const osg::CopyOp&);

	virtual bool allocateSurface(unsigned int, unsigned int, const unsigned char* = 0);

	virtual bool valid() const {
		return osg::Image::valid() && _allocated;
	}

	CairoFormat getFormat() const {
		return _format;
	}

	void setOriginBottomLeft();

	unsigned int getImageSizeInBytes() const;
};

OSGCAIRO_EXPORT unsigned char* createNewImageDataAsCairoFormat(osg::Image*, CairoFormat);

}

#endif
