// -*-c++-*- osgCairo - Copyright (C) 2006 Jeremy Moles

#ifndef OSGCAIRO_SURFACEIMAGE
#define OSGCAIRO_SURFACEIMAGE

#include <osgCairo/Surface>
#include <osg/Image>

namespace osgCairo {

class SurfaceImage: public Surface, public osg::Image {
	bool        _allocated;
	CairoFormat _format;

protected:
	virtual CairoSurface* _createSurfaceImplementation();

public:
	META_Object(osgCairo, SurfaceImage);

	SurfaceImage(CairoFormat = CAIRO_FORMAT_ARGB32);

	SurfaceImage(
		unsigned int,
		unsigned int,
		const unsigned char* = 0,
		CairoFormat          = CAIRO_FORMAT_ARGB32
	);
	
	SurfaceImage(const SurfaceImage&, const osg::CopyOp&);

	bool allocateSurface(unsigned int, unsigned int, const unsigned char* = 0);

	virtual bool valid() const {
		return osg::Image::valid() && _allocated;
	}

	CairoFormat getFormat() const {
		return _format;
	}

	void roundedRectangle    (double, double, double, double, double = 10.0f);
	void roundedCorners      ();
	void setOriginBottomLeft ();
	void gaussianBlur        (unsigned int = 10);

	unsigned int getImageSizeInBytes() const;
};


}

#endif
