#!/usr/bin/env python

import pygtk; pygtk.require("2.0")
import sys
import cairo
import gtk
import math

def convert(d):
	try:
		return float(d)
	
	except ValueError, e:
		return 0.0

class CairoScriptParser(object):
	def __init__(self):
		object.__init__(self)
	
	def Parse(self, cr, buf):
		for line in buf.split("\n"):
			args = line.split()

			if len(args) and hasattr(cr, args[0]):
				try:
					getattr(cr, args[0])(*[convert(a) for a in args[1 : ]])

				except Exception, e:
					print "Parse Error:", e

class CairoDrawingArea(gtk.DrawingArea):
	def __init__(self, width=0, height=0):
		gtk.DrawingArea.__init__(self)

		self.__parser = CairoScriptParser()
		self.__buffer = """
			set_source_rgb 0.3 0.3 0.3
			set_line_width 0.2
			move_to 0.0 0.0
			line_to 1.0 1.0
			move_to 1.0 0.0
			line_to 0.0 1.0
			stroke
		"""

		self.set_size_request(width, height)
		self.connect("expose-event", self.__render)

	def __render(self, widget, event):
		cr = self.window.cairo_create()

		cr.scale(self.allocation.width, self.allocation.height)
		cr.set_source_rgb(0.5, 0.5, 0.5)
		cr.rectangle(0.0, 0.0, 1.0, 1.0)
		cr.fill()
		
		self.__parser.Parse(cr, self.__buffer)
		
		return True

	def Parse(self, buf):
		self.__buffer = buf

		self.queue_draw()

class CairoWindow(gtk.Window):
	def __init__(self, w, h):
		gtk.Window.__init__(self, gtk.WINDOW_TOPLEVEL)

		self.__draw   = CairoDrawingArea(w, h)
		self.__menu   = gtk.MenuBar()
		self.__text   = gtk.TextView()
		self.__tool   = gtk.HBox()
		self.__status = gtk.Statusbar()

		vbox   = gtk.VBox()
		frame  = gtk.Frame()
		scroll = gtk.ScrolledWindow()
		paned  = gtk.VPaned()

		scroll.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
		scroll.add(self.__text)

		frame.set_shadow_type(gtk.SHADOW_ETCHED_IN)
		frame.add(scroll)

		paned.add1(self.__draw)
		paned.add2(frame)

		vbox.pack_start(self.__menu, False, False, 2)
		vbox.pack_start(paned)
		vbox.pack_start(self.__tool, False, False, 2)
		vbox.pack_start(self.__status, False, False)

		self.__text.set_size_request(512, 150)

		for i, b in enumerate((gtk.STOCK_OPEN, gtk.STOCK_SAVE, gtk.STOCK_REFRESH)):
			button = gtk.Button()
			image  = gtk.Image()

			image.set_from_stock(b, gtk.ICON_SIZE_MENU)

			button.set_relief(gtk.RELIEF_NONE)
			button.set_focus_on_click(False)
			button.set_image(image)
			button.connect("clicked", self.__parseCode, i)
			
			self.__tool.pack_start(button, False, False)

		for i, b in enumerate(("File", "Edit")):
			item = gtk.MenuItem(b)

			self.__menu.append(item)

		self.set_title("cairodraw")
		self.add(vbox)
		self.set_focus(self.__text)

	def __parseCode(self, *args):
		buf = self.__text.get_buffer()
		txt = buf.get_text(buf.get_start_iter(), buf.get_end_iter())

		print buf.get_selection_bounds()

		self.__draw.Parse(txt)

if __name__ == "__main__":
	cw = CairoWindow(512, 512)
	
	cw.connect("destroy", gtk.main_quit)
	cw.show_all()
	
	gtk.main()
